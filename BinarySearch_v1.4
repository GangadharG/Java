/* Java program to find how many times is a sorted array rotated */
public class BinarySearch5 {

	public static void main(String[] args){
		
		// Pre condition - Array should be circularly sorted array with no duplicates
		int a[] = {11, 12, 15, 18, 2, 5, 6, 8}; 
		int noOfTimesRotated = findNoOfRotation(a);
		System.out.println(+noOfTimesRotated+" times - sorted array rotated ");
	}
	
	static int findNoOfRotation(int[] a){
		
		int arrayLen = a.length;
		int start = 0, end=arrayLen-1;
		while(start<=end){
			if(a[start] <= a[end]) return start;	// if segment is sorted
			int mid = (start+end)/2;
			int next = (mid+1)%arrayLen, prev=(mid+arrayLen-1)%arrayLen;
			if(a[mid] <= a[next] && a[mid] <= a[prev])	// only place where next and previous elements are greater
				return mid;
			else if(a[mid] <= a[start]) end = mid-1;
			else if(a[mid] >= a[end]) start = mid+1;
		}
		return -1;
	}
}
